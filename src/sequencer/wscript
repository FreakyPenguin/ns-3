# -*- Mode: python; py-indent-offset: 4; indent-tabs-mode: nil; coding: utf-8; -*-

# def options(opt):
#     pass

def configure(conf):
    conf.env['ENABLE_SEQUENCER'] = True
    conf.report_optional_feature('Sequencer', 'In-Network Sequencer',
                                 conf.env['ENABLE_SEQUENCER'],
                                 'Shoud always be enabled')

def build(bld):
    module = bld.create_ns3_module('sequencer', ['internet', 'network'])
    module.source = [
        'model/sequencer.cc',
        'helper/sequencer-helper.cc',
        ]

    module_test = bld.create_ns3_module_test_library('sequencer')
    module_test.source = [
        'test/sequencer-test-suite.cc',
        ]

    headers = bld(features='ns3header')
    headers.module = 'sequencer'
    headers.source = [
        'model/sequencer.h',
        'helper/sequencer-helper.h',
        ]

    if bld.env.ENABLE_EXAMPLES:
        bld.recurse('examples')
